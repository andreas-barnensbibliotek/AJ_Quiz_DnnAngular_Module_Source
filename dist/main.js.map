{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/Http/interceptor.ts","webpack:///./src/Service/DNN/context.service.ts","webpack:///./src/Service/DNN/dev-context.ts","webpack:///./src/Service/demo.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/detail/detail.component.html","webpack:///./src/app/detail/detail.component.scss","webpack:///./src/app/detail/detail.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.scss","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.scss","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/notfound/notfound.component.html","webpack:///./src/app/notfound/notfound.component.scss","webpack:///./src/app/notfound/notfound.component.ts","webpack:///./src/assets/AllreadyExistError.ts","webpack:///./src/assets/NotFoundError.ts","webpack:///./src/assets/appErrors.ts","webpack:///./src/assets/appGlobalErrorHandler.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/services/api-service.service.ts","webpack:///./src/services/boktipsService/boktips.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ2C;AAGc;AACT;AAGhD;IACE,qBAAoB,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;QAClC,OAAO,CAAC,aAAa,EAAE,CAAC;IAC1B,CAAC;IAED,+BAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAAlD,iBAeC;QAdC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,2DAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,+DAAQ,CAAC,aAAG;YACvD,OAAO,CAAC,GAAG,CAAC,0DAA0D,EAAE,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC9F,IAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC;gBACrB,UAAU,EAAE;oBACV,QAAQ,EAAE,KAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE;oBAC3C,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE;oBAC3B,wBAAwB,EAAE,GAAG,CAAC,gBAAgB;oBAC9C,MAAM,EAAE,KAAI,CAAC,OAAO,CAAC,OAAO;oBAC5B,kBAAkB,EAAE,uCAAuC;iBAC5D;aACF,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IApBU,WAAW;QADvB,gEAAU,EAAE;yCAEkB,oEAAO;OADzB,WAAW,CAqBvB;IAAD,kBAAC;CAAA;AArBuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNiC;AACQ;AACH;AACzB;AACM;AAO3C;IAqBI,iBACwB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QArB/C,yFAAyF;QAEzF,sDAAsD;QAC9C,eAAU,GAAG,IAAI,kDAAa,CAAS,CAAC,CAAC,CAAC;QAC1C,mBAAc,GAAG,IAAI,kDAAa,CAAS,CAAC,CAAC,CAAC;QAC/C,gBAAW,GAAQ,EAAE,CAAC;QACtB,cAAS,GAAW,EAAE,CAAC;QACvB,YAAO,GAAW,EAAE,CAAC;QAE5B,WAAM,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QACxC,sBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAEvD,SAAI,GAAG,0DAAa,CAChB,IAAI,CAAC,MAAM,EAAiB,iBAAiB;QAC7C,IAAI,CAAC,iBAAiB,CAAC,CAAK,0BAA0B;aACrD,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAI,QAAa;YAC1B,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;YACb,gBAAgB,EAAE,GAAG,CAAC,CAAC,CAAC;SAC3B,GAHgB,CAGhB,CAAC,CAAC,CAAC;QAKJ,IAAM,MAAM,GAAG,oBAAoB,CAAC;QACpC,6CAA6C;QAC7C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE;YACjC,kBAAkB,EAAE,KAAK;YACzB,8BAA8B,EAAE,KAAK;SACxC,EAAE,WAAW,CAAC,CAAC;QAGhB,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;YAC1B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,0EAA0E,CAAC,CAAC;YACxF,OAAO,CAAC,GAAG,CAAC,uDAAuD,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACvF,OAAO,CAAC,GAAG,CAAC,0EAA0E,CAAC,CAAC;SAC3F;aAAM;YACH,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;YACrD,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;SACzC;IACL,CAAC;IAED,+BAAa,GAAb;QAAA,iBAwCC;QAvCG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QACvC,0CAA0C;QAC1C,IAAI,MAAM,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,iBAAiB,EAAE;YAExC,oDAAoD;YACpD,IAAM,GAAC,GAAG,kDAAK,CAAC,CAAC,EAAE,GAAG,CAAC;iBAClB,IAAI,CAAC,2DAAI,CAAC,EAAE,CAAC,CAAC;iBACd,SAAS,CAAC,WAAC;gBAER,mEAAmE;gBACnE,IAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;gBACxC,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;gBACjD,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC;gBAC5C,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;gBAEjD,8BAA8B;gBAC9B,IAAI,EAAE,CAAC,mBAAmB,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,EAAE;oBAClD,GAAC,CAAC,WAAW,EAAE,CAAC;oBAChB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACpC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAC,CAAC;iBACtD;qBAAM;oBACH,uEAAuE;oBACvE,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC/D,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;qBAC1B;iBACJ;YACL,CAAC,CAAC,CAAC;YACP,OAAO;SACV;QAED,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,8BAA8B,EAAE;YAClD,MAAM,IAAI,KAAK,CAAC,kLAEiD,CAAC,CAAC;SACtE;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;IAChE,CAAC;IApFQ,OAAO;QAHnB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;QAuBO,yEAAQ,EAAE;yCAAsB,uDAAU;OAtBtC,OAAO,CAqFnB;IAAD,cAAC;CAAA;AArFmB;;;;;;;;;;;;;;;;;;;;;;ACVuB;AAG3C;IADA;QAEI,uBAAkB,GAAG,KAAK,CAAC;QAC3B,mCAA8B,GAAG,KAAK,CAAC;QACvC,aAAQ,GAAY,KAAK,CAAC;QAE1B,aAAQ,GAAW,CAAC,CAAC;QACrB,UAAK,GAAW,CAAC,CAAC;QAKlB,SAAI,GAAW,GAAG,CAAC;IACvB,CAAC;IAZY,UAAU;QADtB,gEAAU,EAAE;OACA,UAAU,CAYtB;IAAD,iBAAC;CAAA;AAZsB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLoB;AAEO;AACF;AAKhD;IAIE,qBAAoB,OAAgB,EAAU,IAAgB;QAA1C,YAAO,GAAP,OAAO,CAAS;QAAU,SAAI,GAAJ,IAAI,CAAY;QAC5D,2DAA2D;QAC3D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC;IAC/D,CAAC;IAEM,0CAAoB,GAA3B;QACE,IAAI,UAAU,GAAG,iBAAiB,CAAC;QACnC,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QAClD,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,MAAM,CAAC;IACnC,CAAC;IAhBU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK6B,4DAAO,EAAgB,+DAAU;OAJnD,WAAW,CAiBvB;IAAD,kBAAC;CAAA;AAjBuB;;;;;;;;;;;;;;;;;;;;;;;ACRiB;AACc;AAGvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACV7B,mB;;;;;;;;;;;ACAA,6LAA6L,qBAAqB,iDAAiD,qCAAqC,+CAA+C,kCAAkC,4CAA4C,gCAAgC,4CAA4C,gCAAgC,4CAA4C,gCAAgC,0CAA0C,8BAA8B,mDAAmD,uCAAuC,yCAAyC,6BAA6B,mDAAmD,uCAAuC,mDAAmD,uCAAuC,4CAA4C,sCAAsC,+CAA+C,4CAA4C,+KAA+K,cAAc,uB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzzC;AACY;AAEG;AAQzD;IAIE,sBAAmB,OAAgB,EAAU,YAAyB;QAAnD,YAAO,GAAP,OAAO,CAAS;QAAU,iBAAY,GAAZ,YAAY,CAAa;QAHtE,UAAK,GAAG,qCAAqC,CAAC;QAC9C,iBAAY,GAAG,EAAE,CAAC;QAGhB,OAAO,CAAC,aAAa,EAAE,CAAC;IAC1B,CAAC;IAEO,wCAAiB,GAAzB;QAAA,iBAmBC;QAlBC,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,cAAI;YACrD,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;YAClD,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QACpD,CAAC,EACC,UAAC,GAAsB;YACrB,IAAI,GAAG,CAAC,KAAK,YAAY,KAAK,EAAE;gBAC9B,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;gBAClD,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;gBACvD,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;aACnD;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;gBAClD,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;gBACvD,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;aACnD;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,0BAAG,GAAH,UAAI,GAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IACxC,CAAC;IA/BU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAK4B,oEAAO,EAAwB,iEAAW;OAJ3D,YAAY,CAgCxB;IAAD,mBAAC;CAAA;AAhCwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiD;AAC7B;AACe;AACb;AACS;AACU;AACN;AACN;AACA;AACI;AACjB;AAEM;AAC4B;AACzB;AACI;AACG;AACd;AAsC3C;IAAA;IAAyB,CAAC;IAAb,SAAS;QApCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,wEAAe;gBACf,kEAAa;gBACb,kEAAa;gBACb,wEAAe;gBACf,8EAAiB;aAClB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,sEAAgB;gBAChB,oEAAgB;gBAChB,yDAAU;gBACV,4DAAY,CAAC,OAAO,CAAC;oBACnB,EAAC,IAAI,EAAC,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;oBACvC,EAAC,IAAI,EAAC,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;oBACvC,EAAC,IAAI,EAAC,mBAAmB,EAAE,SAAS,EAAE,wEAAe,EAAC;oBACtD,EAAC,IAAI,EAAC,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAC;oBAE3C,EAAC,IAAI,EAAC,IAAI,EAAE,SAAS,EAAE,8EAAiB,EAAC;iBAE1C,CAAC;aACH;YACD,SAAS,EAAE;gBACT,qEAAO;gBACP;oBACE,OAAO,EAAE,uEAAiB;oBAC1B,QAAQ,EAAE,8DAAW;oBACrB,KAAK,EAAE,IAAI;iBACZ;gBACD,kEAAW;gBACX,EAAC,OAAO,EAAE,0DAAY,EAAE,QAAQ,EAAE,mFAAqB,EAAC;aACvD;YACH,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACvDtB,wBAAwB,0BAA0B,oBAAoB,2BAA2B,8I;;;;;;;;;;;ACAjG,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAiF;AAC/B;AACO;AAOzD;IAGE,yBAAoB,KAAoB,EAAS,MAAa,EAAU,UAAyB;QAA7E,UAAK,GAAL,KAAK,CAAe;QAAS,WAAM,GAAN,MAAM,CAAO;QAAU,eAAU,GAAV,UAAU,CAAe;QAFjG,YAAO,GAAK,EAAC,SAAS,EAAC,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,OAAO,EAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,CAAC,EAAC,CAAC;IAE6B,CAAC;IAEvG,kCAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,eAAK;YACjC,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAEzB,KAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,kBAAQ;gBACnD,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,EAAE;YAEhC,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC;IACJ,CAAC;IAED,2CAAiB,GAAjB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAC;YAC7B,WAAW,EAAC,EAAC,IAAI,EAAC,CAAC,EAAC;SACrB,CAAC;IACJ,CAAC;IArBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAI0B,8DAAc,EAAgB,sDAAM,EAAqB,uFAAc;OAHtF,eAAe,CAsB3B;IAAD,sBAAC;CAAA;AAtB2B;;;;;;;;;;;;ACT5B,uC;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,qRAAqR,eAAe,QAAQ,cAAc,2E;;;;;;;;;;;ACA1T,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCkD;AAC+B;AAC/B;AACD;AAQjD;IAGE,uBAAoB,KAAoB,EAAS,UAAyB;QAAtD,UAAK,GAAL,KAAK,CAAe;QAAS,eAAU,GAAV,UAAU,CAAe;QAF1E,YAAO,GAAM,EAAE,CAAC;IAE+D,CAAC;IAEhF,gCAAQ,GAAR;QACE,0DAAa,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;aAC7D,SAAS,CAAC,kBAAQ;YACjB,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;QACrC,CAAC,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAC9C,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,kCAAU,GAAV;QAAA,iBAGC;QAFC,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,EAAE,EAA9B,CAA8B,CAAC,CAAC;IAC7F,CAAC;IAnBU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAI0B,8DAAc,EAAoB,uFAAc;OAH/D,aAAa,CAoBzB;IAAD,oBAAC;CAAA;AApByB;;;;;;;;;;;;ACZ1B,qgBAAqgB,OAAO,gO;;;;;;;;;;;ACA5gB,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,2C;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPS;AAEvC;IAAwC,sCAAQ;IAAhD;QAAA,qEAGC;QADG,YAAM,GAAG,oBAAoB;;IACjC,CAAC;IAAD,yBAAC;AAAD,CAAC,CAHuC,mDAAQ,GAG/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLsC;AAEvC;IAAmC,iCAAQ;IAA3C;QAAA,qEAEC;QADG,YAAM,GAAG,qCAAqC;;IAClD,CAAC;IAAD,oBAAC;AAAD,CAAC,CAFkC,mDAAQ,GAE1C;;;;;;;;;;;;;;ACJD;AAAA;AAAA;IAEI,kBAAmB,QAAa;QAAb,aAAQ,GAAR,QAAQ,CAAK;IAGhC,CAAC;IAEL,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACLD;AAAA;AAAA;IAAA;IAKE,CAAC;IAJC,2CAAW,GAAX,UAAY,KAAK;QACb,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAG,KAAK,CAAC,CAAC;IACtD,CAAC;IACH,4BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACPH;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXkC;AACV;AACX;AACV;AACM;AACT;AACsB;AAKxD;IAEE,2BAAoB,GAAU,EAAU,IAAS;QAA7B,QAAG,GAAH,GAAG,CAAO;QAAU,SAAI,GAAJ,IAAI,CAAK;IACjD,CAAC;IAED,oCAAQ,GAAR,UAAS,GAAI;QACX,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,CAAC;QACjC,IAAG,GAAG;YAAE,IAAI,CAAC,GAAG,GAAE,GAAG,CAAC;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;aAC/B,IAAI,CACH,4DAAK,CAAC,CAAC,CAAC,EAAC,iDAAiD;QAC1D,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,CACvC,CAAC;IACJ,CAAC;IAED,sCAAU,GAAV,UAAW,OAAO;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;aACtD,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,CACvC,CAAC;IACJ,CAAC;IAED,sCAAU,GAAV,UAAW,EAAE;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAE,GAAG,GAAE,EAAE,CAAC;aACzC,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,CACvC,CAAC;IACJ,CAAC;IAED,yCAAa,GAAb,UAAc,GAAG;QACf,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,EAAE,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;aAClD,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,CACvC,CAAC;IACJ,CAAC;IAGO,iDAAqB,GAA7B,UAA8B,KAAe;QAE3C,IAAG,KAAK,CAAC,MAAM,KAAK,GAAG,EAAC;YACtB,OAAO,+CAAU,CAAC,KAAK,CAAC,IAAI,6EAAkB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SAC/D;QAED,IAAG,KAAK,CAAC,MAAM,KAAK,GAAG,EAAC;YACtB,OAAO,+CAAU,CAAC,KAAK,CAAC,IAAI,mEAAa,EAAE,CAAC,CAAC;SAC9C;QAED,OAAO,+CAAU,CAAC,KAAK,CAAC,IAAI,0DAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/C,CAAC;IAjDU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;iDAG6C,kDAAI;OAFtC,iBAAiB,CAkD7B;IAAD,wBAAC;CAAA;AAlD6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXO;AACwB;AAClB;AAK3C;IAAoC,kCAAiB;IAKnD,wBAAY,IAAS;QAArB,YACE,kBAAM,EAAE,EAAC,IAAI,CAAC,SACd;QANM,YAAM,GAAU,kCAAkC,CAAC;QACnD,aAAO,GAAU,wBAAwB,CAAC;QAC1C,YAAM,GAAU,wBAAwB,CAAC;;IAIhD,CAAC;IAED,uCAAc,GAAd,UAAe,KAAS;QACvB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACvC,IAAI,MAAM,GAAU,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,eAAe,GAAG,KAAK,GAAG,WAAW,GAAE,IAAI,CAAC,MAAM,CAAC;QACpG,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,uCAAc,GAAd,UAAe,EAAM;QACpB,IAAI,MAAM,GAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,cAAc,GAAG,EAAE,GAAG,WAAW,GAAE,IAAI,CAAC,MAAM,CAAC;QACxF,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAlBW,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMiB,kDAAI;OALV,cAAc,CAoB1B;IAAD,qBAAC;CAAA,CApBmC,sEAAiB,GAoBpD;AApB0B","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { Context } from \"../Service/DNN/context.service\";\r\nimport { take, mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class Interceptor implements HttpInterceptor {\r\n  constructor(private context: Context) { \r\n    context.autoConfigure();\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return this.context.all$.pipe(take(10)).pipe(mergeMap(ctx => {\r\n      console.log('TCL: Interceptor -> ctx.antiForgeryToken -------------->', ctx.antiForgeryToken);\r\n      const newReq = req.clone({\r\n          setHeaders: {\r\n            ModuleId: this.context._moduleId.toString(),\r\n            TabId: ctx.tabId.toString(),\r\n            RequestVerificationToken: ctx.antiForgeryToken,\r\n            userid: this.context._userId,\r\n            'X-Debugging-Hint': 'bootstrapped by bbAngular, 2SXC, OPSI',\r\n          }\r\n        });\r\n\r\n        return next.handle(newReq);\r\n      }));\r\n  }\r\n}","import { ContextInfo } from './context-info';\r\nimport { DevContext as DevContext } from './dev-context';\r\nimport { ElementRef, Injectable, Optional } from '@angular/core';\r\nimport { Observable, combineLatest, from, timer } from 'rxjs';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\ndeclare const window: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class Context {\r\n    // todo: probably should set the replay-buffer to 1 for all the following, but must test!\r\n\r\n    // private cbIdSubject = new ReplaySubject<number>(1);\r\n    private tidSubject = new ReplaySubject<number>(1);\r\n    private afTokenSubject = new ReplaySubject<string>(1);\r\n    public _properties: any = {};\r\n    public _moduleId: string = \"\";\r\n    public _userId: string = \"\";\r\n\r\n    tabId$ = this.tidSubject.asObservable();\r\n    antiForgeryToken$ = this.afTokenSubject.asObservable();\r\n\r\n    all$ = combineLatest(\r\n        this.tabId$,                // wait for tabId\r\n        this.antiForgeryToken$)     // wait for security token\r\n        .pipe(map(res => <ContextInfo>{  // then merge streams\r\n            tabId: res[0],\r\n            antiForgeryToken: res[1]\r\n        }));\r\n\r\n    constructor(\r\n        @Optional() private devSettings: DevContext  \r\n    ) {\r\n        const MODULE = 'AJ_Quiz_DnnAngular';\r\n        // Dev settings with minimal ignore settings.\r\n        this.devSettings = Object.assign({}, {\r\n            ignoreMissing$2sxc: false,\r\n            ignoreMissingServicesFramework: false\r\n        }, devSettings);\r\n\r\n        \r\n        if (window && window[MODULE]) {\r\n            this._properties = window[MODULE];\r\n            console.log('​-----------------------------------------------------------------------');\r\n            console.log('​DnnContextService -> constructor -> this._properties', this._properties);\r\n            console.log('​-----------------------------------------------------------------------');\r\n        } else {\r\n            console.log('----------------------');\r\n            console.log('ERROR: Missing window[MODULE] for DNN');\r\n            console.log('----------------------');\r\n        }        \r\n    }\r\n\r\n    autoConfigure() {\r\n        this._moduleId = this._properties.ModuleId;\r\n        this._userId = this._properties.UserId;\r\n        // Check if DNN Services framework exists.\r\n        if (window.$ && window.$.ServicesFramework) {\r\n \r\n            // Run timer till sf is ready, but max for a second.\r\n            const t = timer(0, 100)\r\n                .pipe(take(10))\r\n                .subscribe(x => {\r\n\r\n                    // This must be accessed after a delay, as the SF is not ready yet.\r\n                    const sf = window.$.ServicesFramework();\r\n                    console.log('TCL: ----------------------------');\r\n                    console.log('TCL: autoConfigure -> sf', sf);\r\n                    console.log('TCL: ----------------------------');\r\n\r\n                    // Check if sf is initialized.\r\n                    if (sf.getAntiForgeryValue() && sf.getTabId() !== -1) {\r\n                        t.unsubscribe();\r\n                        this.tidSubject.next(sf.getTabId());\r\n                        this.afTokenSubject.next(sf.getAntiForgeryValue());\r\n                    } else {\r\n                        // Must reset, as they are incorrectly initialized when accessed early.\r\n                        if (window.dnn && window.dnn.vars && window.dnn.vars.length === 0) {\r\n                            window.dnn.vars = null;\r\n                        }\r\n                    }\r\n                });\r\n            return;\r\n        }\r\n\r\n        if (!this.devSettings.ignoreMissingServicesFramework) {\r\n            throw new Error(`\r\n                DNN Services Framework is missing, and it\\'s not allowed according to devSettings.\r\n                Either set devSettings to ignore this, or ensure it\\'s there`);\r\n        }\r\n\r\n        this.tidSubject.next(this.devSettings.tabId);\r\n        this.afTokenSubject.next(this.devSettings.antiForgeryToken);\r\n    }\r\n}","// This lets you configure test-values during development.\r\nimport { ContextInfo } from './context-info';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DevContext implements ContextInfo {\r\n    ignoreMissing$2sxc = false;\r\n    ignoreMissingServicesFramework = false;\r\n    forceUse: boolean = false;\r\n\r\n    moduleId: number = 0;\r\n    tabId: number = 0;\r\n\r\n    contentBlockId: number;\r\n    antiForgeryToken: 'ThisIsaTestAntiForgeryToken';\r\n    sxc: null;\r\n    path: string = '/';\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Context } from './DNN/context.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DemoService {\r\n  private _routingWebAPI: string;\r\n  private demorouting: string;\r\n\r\n  constructor(private context: Context, private http: HttpClient) {\r\n    //this._routingWebAPI = \"/DesktopModules/Angular6Demo/API/\"\r\n    this._routingWebAPI = this.context._properties.routingWebAPI;\r\n  }\r\n\r\n  public getStagingOutputList(): Observable<any> {\r\n    let webAPIName = \"item/HelloWorld\";\r\n    let getUrl = this._routingWebAPI + webAPIName;\r\n    console.log('​---------------------------------');\r\n    console.log('​StagingService -> getUrl', getUrl);\r\n    console.log('​---------------------------------');\r\n    return this.http.get<any>(getUrl)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<app-navbar></app-navbar>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n<div>\\r\\n  context._moduleId: {{ context._moduleId }}<br/> \\r\\n  context._properties.routingWebAPI: {{ context._properties.routingWebAPI }}<br/>  \\r\\n  context._properties.IsEditable: {{ context._properties.IsEditable }}<br/> \\r\\n  context._properties.EditMode: {{ context._properties.EditMode }}<br/> \\r\\n  context._properties.ModuleId: {{ context._properties.ModuleId }}<br/> \\r\\n  context._properties.PortalId: {{ context._properties.PortalId }}<br/> \\r\\n  context._properties.UserId: {{ context._properties.UserId }}<br/> \\r\\n  context._properties.CurrentLanguage: {{ context._properties.CurrentLanguage }}<br/> \\r\\n  context._properties.TabId: {{ context._properties.TabId }}<br/> \\r\\n  context._properties.PortalLanguages: {{ context._properties.PortalLanguages }}<br/> \\r\\n  context._properties.CurrentLanguage: {{ context._properties.CurrentLanguage }}<br/>\\r\\n  context._properties.Resources: {{ log(context._properties.Resources) }}<br/>\\r\\n  context._properties.Resources[0]: {{context._properties.Resources.AddItem_Text}}<br/>\\r\\n  antiForgeryToken: (see console log)<br/>\\r\\n  <div>\\r\\n    <button type=\\\"button\\\" (click)=\\\"getDataFromWebAPI()\\\">call DNN webapi</button>\\r\\n    webapi return: {{webapiResult}}\\r\\n  </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { DemoService } from '../Service/demo.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Context } from '../Service/DNN/context.service';\r\nimport { take, mergeMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'template Angular for DNN7-DNN8-DNN9';\r\n  webapiResult = '';\r\n\r\n  constructor(public context: Context, private _demoService: DemoService) {\r\n    context.autoConfigure();\r\n  }\r\n\r\n  private getDataFromWebAPI() {\r\n    this._demoService.getStagingOutputList().subscribe(data => {\r\n      this.webapiResult = data;\r\n      console.log('​---------------------------------');\r\n      console.log('Call webapi data -> data: ', data);\r\n      console.log('​---------------------------------');\r\n    },\r\n      (err: HttpErrorResponse) => {\r\n        if (err.error instanceof Error) {\r\n          console.log('​---------------------------------');\r\n          console.log('Call webapi error -> ERROR: ', err.error);\r\n          console.log('​---------------------------------');\r\n        } else {\r\n          console.log('​---------------------------------');\r\n          console.log('Call webapi error -> ERROR: ', err.error);\r\n          console.log('​---------------------------------');\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  log(par: any): string{\r\n    return JSON.stringify(par).toString();\r\n  }\r\n}\r\n\r\n","import { AppGlobalErrorHandler } from './../assets/appGlobalErrorHandler';\r\nimport { ErrorHandler } from '@angular/core';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { NotfoundComponent } from './notfound/notfound.component';\r\nimport { DetailComponent } from './detail/detail.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { Interceptor } from '../Http/interceptor';\r\nimport { DemoService } from '../Service/demo.service';\r\nimport { Context } from '../Service/DNN/context.service';\r\nimport { HttpModule } from '@angular/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    ListComponent,\r\n    DetailComponent,\r\n    NotfoundComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule, // important - this changed in Angular 4.3 \r\n    AppRoutingModule,\r\n    HttpModule,\r\n    RouterModule.forRoot([\r\n      {path:'home', component: HomeComponent},     \r\n      {path:'list', component: ListComponent},\r\n      {path:'detail/:id/:Title', component: DetailComponent},\r\n      {path:'detail', component: DetailComponent},\r\n      \r\n      {path:'**', component: NotfoundComponent}\r\n\r\n    ])\r\n  ],\r\n  providers: [    \r\n    Context,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: Interceptor,\r\n      multi: true\r\n    },\r\n    DemoService,\r\n    {provide: ErrorHandler, useClass: AppGlobalErrorHandler}\r\n    ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h1>{{boktips.Boktips[0].Title}}</h1>\\n<img src=\\\"{{boktips.Boktips[0].ImgSrc}}\\\" />\\n<p [innerHTML]=\\\"boktips.Boktips[0].Review\\\"></p>\\n<button (click)= \\\"tillbakaTillLista()\\\" class=\\\"btn btn-info\\\">skicka</button>\\n\\n\"","module.exports = \"\"","import { BoktipsService } from './../../services/boktipsService/boktips.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements OnInit {\n  boktips:any={\"Boktips\":[{\"TipID\":0,\"Title\":\"Laddar\",\"Review\":\"Laddar\"}]};\n  \n  constructor(private route:ActivatedRoute,private router:Router, private tipService:BoktipsService ) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(prams =>{\n      let id = prams.get('id');\n      \n      this.tipService.getboktipsById(id).subscribe(Response => {\n        this.boktips = Response.json() \n        \n      });\n      \n    })\n  }\n \n  tillbakaTillLista(){\n    this.router.navigate(['/list'],{\n      queryParams:{list:3}\n    })\n  }\n}\n","module.exports = \"<p>home works!</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n    \\n    <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let boktip of boktips.Boktips\\\">       \\n            <a [routerLink]=\\\"['/detail',boktip.TipID, boktip.Title]\\\" ><img src=\\\"{{boktip.ImgSrc}}\\\" /> {{boktip.Title}} </a><br />       \\n    \\n        </li>\\n    </ul>\\n    </div>\\n    </div>\"","module.exports = \"\"","\nimport { Observable, combineLatest  } from 'rxjs';\nimport { BoktipsService } from './../../services/boktipsService/boktips.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n  boktips:any =[];\n\n  constructor(private route:ActivatedRoute,private tipService:BoktipsService ) { }\n\n  ngOnInit() {\n    combineLatest([this.route.paramMap, this.route.queryParamMap])   \n    .subscribe(combined =>{\n      let id = combined[0].get(\"id\");\n      let Query = combined[1].get(\"test\")\n    })\n\n    console.log(\"innan listcomponent kommer hit\");\n    this.getboktips();\n  }\n\n  getboktips(){\n    console.log(\"listcomponent kommer hit\");\n    this.tipService.getboktipslist(\"14\").subscribe(Response => this.boktips = Response.json());\n  }\n}\n","module.exports = \"<nav class=\\\"navbar navbar-expand navbar-dark bg-dark\\\">\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExample02\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li routerLinkActive=\\\"active current\\\" class=\\\"nav-item \\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li routerLinkActive=\\\"active current\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/list\\\" [queryParams]=\\\"{test:1}\\\">Lista</a>\\n        </li>\\n        <li routerLinkActive=\\\"active current\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/detail\\\">detail</a>\\n        </li>\\n      </ul>\\n    </div>        \\n  </nav>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>notfound works!</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.scss']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { AppError } from './appErrors';\r\n\r\nexport class AllreadyExistError extends AppError{\r\n    \r\n    return = \"Finns redan! (400)\"\r\n}","import { AppError } from './appErrors';\r\n\r\nexport class NotFoundError extends AppError{\r\n    return = \"Hittade inte, Not Found ERROR (404)\"\r\n}","export class AppError\r\n{\r\n    constructor(public orgError?:any){\r\n                  \r\n            \r\n    }\r\n\r\n}","import { ErrorHandler } from \"@angular/core\";\r\n\r\nexport class AppGlobalErrorHandler implements ErrorHandler {\r\n    handleError(error) {\r\n        alert(\"Något blev fel i: Post\");\r\n        console.log(\"Post Global ERRORMESSAGE: \" + error);  \r\n    }\r\n  }","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","import { AllreadyExistError } from './../assets/AllreadyExistError';\nimport { NotFoundError } from './../assets/NotFoundError';\nimport { AppError } from '../assets/appErrors';\nimport { Http } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, map, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiServiceService {\n \n  constructor(private url:string, private http:Http) { \n  }\n\n  getPosts(url?){    \n    console.log(\"kommer hit \" + url);\n    if(url) this.url =url;\n      return this.http.get(this.url)\n    .pipe(      \n      retry(4),// använd retry för att göra om reqesten x gånger\n      catchError(this.HandleThisClassErrors)\n    );\n  } \n\n  createPost(postobj){    \n    return this.http.post(this.url,JSON.stringify(postobj))\n    .pipe(\n      catchError(this.HandleThisClassErrors)\n    );   \n  }\n\n  deletePost(id){    \n    return this.http.delete(this.url +'/'+ id)\n    .pipe(     \n      catchError(this.HandleThisClassErrors)\n    );\n  }\n\n  uppdateraPost(itm){\n    console.log(\"uppdaterar\" + itm.id)\n    return this.http.post(this.url,JSON.stringify(itm))\n    .pipe(\n      catchError(this.HandleThisClassErrors)\n    );   \n  }\n\n  \n  private HandleThisClassErrors(error: Response){\n    \n    if(error.status === 400){\n      return Observable.throw(new AllreadyExistError(error.json()));\n    }\n\n    if(error.status === 404){\n      return Observable.throw(new NotFoundError());\n    }\n    \n    return Observable.throw(new AppError(error));\n  }\n}\n","import { Http } from '@angular/http';\nimport { ApiServiceService } from './../api-service.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoktipsService extends ApiServiceService {\n  private server:string = \"https://www2.barnensbibliotek.se\";\n  private apiCall:string = \"/Api_v3.1/boktips/typ/\";\n  private devkey:string = \"/devkey/alf/?type=json\";\n\n  constructor(http:Http) {\n    super(\"\",http);\n   }\n\n   getboktipslist(antal:any) {\n    console.log(\"getboktipslist kommer hit\");\n      let apiurl:string = this.server + this.apiCall + \"ByRandom/val/\" + antal + \"/txtval/0\"+ this.devkey;\n      return this.getPosts(apiurl);\n   }\n\n   getboktipsById(id:any) {\n    let apiurl= this.server + this.apiCall + \"ByTipId/val/\" + id + \"/txtval/0\"+ this.devkey;\n    return this.getPosts(apiurl);\n }\n \n}\n"],"sourceRoot":""}